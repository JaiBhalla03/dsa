class Solution {
    public int findJudge(int n, int[][] trust) {
        Stack<Integer> st = new Stack<Integer>();
        for(int i = 0 ; i < n ; i++){
            st.push(i);
        }
        int[][] arr = new int[n][n];
        for(int i = 0 ; i < n ; i++){
            for(int j = 0 ; j < n ; j++){
                arr[i][j] = 0;
            }
        }
        for(int i = 0 ; i < trust.length ; i++){
            arr[trust[i][0] - 1][trust[i][1] - 1] = 1;
        }
        while(st.size() > 1){
            int row = st.pop();
            int col = st.pop();
            if(arr[row][col] == 1){
                st.push(col);
            }
            else{
                st.push(row);
            }
        }
        int x = st.pop();
        for(int i = 0 ; i < n ; i++){
            if(arr[x][i] == 1) return -1;
        }
        for(int i = 0 ; i<n ; i++){
            if(x != i){
                if(arr[i][x] == 0) return -1;
            }
        }
        return x + 1;
    }
}